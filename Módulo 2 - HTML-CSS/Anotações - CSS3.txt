CSS 3
"você cria regras de estilo para elementos ou grupos de elementos".

Podemos colocar vários seletores em uma regra separando-os por vírgula.(IPC)

E há um último detalhe nesse exemplo: a pseudo-classe. Elementos HTML sofrem alterações causadas pela interação do usuário, como mover o mouse por cima ou clicar nesse elemento.

O <a> hover do exemplo significa que a âncora também terá essa aparência quando o usuário passar o mouse por cima de um hyperlink.
 

ID x Classe

ID: é representado pelo símbolo # (hash) seguido de um nome para esse ID.

Classe: a classe é representada de forma parecida do ID, mas é precedida por um ponto em vez do hash.

E a diferença mais importante entre eles é a forma como devem ser usados: o ID só pode ser usado uma vez em uma página HTML enquanto a classe não tem restrições.


Podemos adicionar CSS de duas formas, podemos criar um elemento style fazendo assim suas regras integradas no arquivo HTML, ou podemos criar um arquivo CSS e adicioná-lo na página através do elemento link, e é essa forma que usaremos.

botão direito no vscode no repositório onde está seu arquivo htlml,new file, e o nomeie de style.css. Após,  Crie um elemento link dentro do head do seu arquivo e adicione os atributos rel="stylesheet" e href="style.css" "<link rel="stylesheet" href="style.css">"
o "rel" denota o tipo de arquivo que estamos incluindo na página e o href é o caminho para o arquivo. 

Agora sim vamos ao CSS, adicione um ID #title ao h1 da página, pois queremos que ele seja único, e depois adicione as classes .subtitle e .post_title ao h2 e h3, respectivamente.

No arquivo CSS vamos mudar a cor desses três títulos, e depois alterar o tamanho da fonte do título da postagem.
 

Box-model
Quando estamos criando o layout de um site o navegador representa cada elemento HTML  como uma caixa retangular, isso é o box-model. E com CSS nós alteramos a aparência dessa caixa (largura, altura, cor de fundo, etc.). Essa caixa é composta por 4 áreas: o conteúdo, o padding, a borda e a margem.

As margens (margin) são espaçamentos entre elementos;

As bordas (border) elas circundam o padding e o conteúdo e a gente consegue alterar a aparência delas como largura e cor;

O padding é um espaçamento entre as bordas e o conteúdo, a diferença para as margens é que declarações de imagem de fundo funcionam nele;

O conteúdo (content) é o que o seu bloco representa, um texto, uma imagem, um vídeo;
 

Estilizando elementos
Agora que entendemos o box-model podemos focar em deixar nosso site mais bonito, então vamos repassar pelas propriedades já citadas:

Padding e Margin
três formas de atribuir tamanhos diferentes para padding e margin

A primeira é colocando um valor para as partes superior e inferior e depois para os lados esquerdo e direito.

O valor de 10 pixels se refere ao eixo Y, ou partes superior e inferior, e os 5 pixels se referem aos lados esquerdo e direito.
exemplo:

padding 10px 5px;

A segunda forma é dando valores para cada lado do box.

Então começamos pelo topo com 15 pixels, passamos o lado direito com 10 pixels, depois para a parte inferior com 5 pixels e por último o lado esquerdo com 0, e sempre nessa ordem, exemplo:

padding 15px 10px 5px 0px;


Dica! Quando o valor for 0 não precisamos não precisamos colocar a unidade.

A terceira forma é com as propriedades específicas para cada lado, até agora tínhamos visto atalhos para essas propriedades.

Essa opção é mais usada quando temos o mesmo valor para 3 lados, e o quarto precisa ter um valor diferente, então usamos o padding com apenas um valor e uma dessas opções para representar o lado diferente.
exemplo:

padding-top: 15px;
padding-right: 10px;
padding-bottom: 5px;
padding-left: 0;
 

Background
A propriedade background também é um atalho para várias propriedades, mas isso vocês podem absorver aos poucos, e uma boa opção de leitura é a documentação do MDN(mozzila development network).

Veremos apenas como mudar a cor de fundo.


E aqui temos 3 formas de colocar uma cor de fundo, e ainda existem outras.

A primeira é pelo nome da cor em inglês 
exemplo:
.post{
backgroud-color green;
}

A segunda é pelo código hexadecimal
exemplo:
.post{
background-color #0088000;
}

exemplo:
A terceira é usando apenas o atalho background.

.post{
background #0088000;
}
 

Border
Vimos que a propriedade border pode ter 3 valores: a largura, a cor e o estilo, mas existem algumas particularidades nisso.

A largura pode ser usada com várias unidades, como px, em e mm. A cor pode ser atribuída pelo nome ou por um código hexadecimal, assim como fizemos com o background, e o estilo é representada por palavras-chave, vamos ver algumas delas:

 
solid: mostra uma borda simples e reta;

dotted: são bolinhas com um pequeno espaçamento entre elas;

dashed: forma uma linha tracejada.

exemplo:
neste exemplo temos uma borda nos lados de baixo e esquerdos, solidas e azuis
lado de cima, pontilhada e verde
lado direito tracejada e rosa
.post{
border: 3px solid blue
border-top: 2px dotted green
border-right: 4px dashed pink
}

E aproveitando que mostrei esse código temos que falar sobre como separar a estilização dos lados de uma borda.

E se você não quiser usar a propriedade border existem as propriedade específicas para cada aspecto de uma borda, são elas border-width para a largura, border-color para a cor e border-style para o estilo.

Aqui temos o mesmo código anterior de duas formas diferentes, a primeira com o atalho border e a segunda com cada propriedade específica.

não usando propriedades específicas
.post{
border: 3px solid #505050;
}

usando propriedades específicas
.post{
border-width: 3px;
border-color: #505050;
border-style: solid;
}

E depois disso podemos juntar os lados com os aspectos de uma borda e criar uma regra mais específica ainda.
exemplo:
.post{
border-top-width: 3px;
border-top-color: blue;
border-top-style: solid;
}
 

Border-radius

E a última propriedade é o border-radius, ele permite arredondar os cantos de um elemento. Podemos usar várias unidades, mas as mais comuns são os pixels e a porcentagem.

Colocando apenas um valor mudamos todos os cantos do elemento, mas seguindo aquela mesma ordem que vimos no padding e margin - topo, direita, inferior e esquerda -  conseguimos alterar cada canto separadamente.

 

Estilizando textos
Sabendo que podemos mudar cor e tamanho de algumas fontes vamos nos aprofundar nisso.

 
font-family
Com o font-family podemos alterar a fonte dos nossos textos, como uma fonte da internet ou uma que esteja instalada no nosso computador, mas vamos nos ater às fontes seguras, chamadas de web safe fonts.

Essas fontes são chamadas assim pois são encontradas em quases todos os sistemas e podem ser usadas sem preocupação.
exemplo:

#title{
font-family: Verdana;
}

neste segundo exemplo, adicionamos duas fontes. Para caso uma não exista no dispositivo a outra entre como back-up

.post_title{
font-family: Verdana, Arial;
}
 

font-size
O font-size nos ajuda a mudar o tamanho do texto, existem algumas unidades de medida para ele mas por enquanto os pixels são suficientes para nós.

 .post_title{
font-size: 30px;
}

font-style
Usamos o font-style para tornar um texto itálico, na maioria das vezes você usará apenas o valor italic para ele, mas se precisar tirar o itálico de um texto você pode usar o valor normal.

 .post_title{
font-style: 30px;
}

font-weight
Usamos o font-weight para alterar o "peso" do texto,existem valores numéricos e valores fixos, porém estes são usados em fontes mais complexas que tem vários pesos.

.post_title{
font-weight: bold;
}

text-transform
O text-transform alterna o texto entre maiúsculas e minúsculas,o valor "uppercase", coloca todo o texto em caixa alta, o valor "lowercase" coloca todo o texto em caixa baixa e o valor "capitalize", coloca todas as primeiras letras de cada palavra em maiuscula.

.post_title{
text-transform: capitalize;
}

text-decoration
o text-decoration é muito usado para dar destaque à algum texto, pois ele coloca linhas. 
O valor "underline" coloca uma linha baixo da palavra
O valor "overline" coloca uma linha acima da palavra.
O valor "line-throug" coloca uma linha ao centro,cortando essa palavra 

list-style-type
para alterar o marcador de uma lista, usamos o list-style-type para qualquer tipo de lista, seja ela ordenada ou não.
exemplo
ul{
list-style-type: square;
}

ol{
list-style-type: Upper-roman;
}

ul{
list-style-type: "\1F44D";
}

Podemos também, usar uma imagem para marcadores usando o list-style-image
exemplo:

ul{
list-style-image: url("rocket.png");
}